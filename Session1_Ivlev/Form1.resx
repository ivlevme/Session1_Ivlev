<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /w+3J87RP0yQ4gAAAABJRU5ErkJggg==
</value>
  </data>
</root>